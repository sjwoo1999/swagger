openapi: 3.0.0
info:
  title: Swagger Practice API
  version: 1.0.0
  description: Teamitaka 기능 연습을 위한 API 명세서
servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: "3000"
        description: "Server port (dynamic)"
paths:
  /:
    get:
      summary: Welcome Message
      description: 기본 경로로 환영 메시지를 반환합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Welcome to Swagger Practice API! Visit /api-docs for Swagger UI."
  /hello:
    get:
      summary: Hello World
      description: 이름 쿼리 파라미터를 기반으로 인사말을 반환합니다.
      parameters:
        - name: name
          in: query
          description: 인사할 대상의 이름
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Hello, stranger!"
  /api/register:
    post:
      summary: 사용자 등록
      description: 새로운 사용자를 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "johndoe"
                email:
                  type: string
                  example: "johndoe@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        '201':
          description: 사용자 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "✅ 회원가입 성공!"
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: 필수 필드 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "❌ 모든 필드(username, email, password)가 필요합니다."
  /api/auth/login:
    post:
      summary: 사용자 로그인
      description: 이메일과 비밀번호로 로그인합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "johndoe@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "✅ 로그인 성공!"
                  token:
                    type: string
                    example: "mock-token"
        '401':
          description: 로그인 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "로그인 실패"
  /api/auth/validate-password:
    post:
      summary: 비밀번호 검증
      description: 비밀번호 유효성을 검증합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: 검증 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  message:
                    type: string
                    example: "비밀번호 유효성 검증 완료"
  /api/admin/login:
    post:
      summary: 관리자 로그인
      description: 관리자 계정으로 로그인합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "admin@example.com"
                password:
                  type: string
                  example: "admin123"
      responses:
        '200':
          description: 관리자 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "mock-admin-token"
                  message:
                    type: string
                    example: "관리자 로그인 성공"
        '403':
          description: 관리자 계정 아님
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "관리자 계정이 아닙니다."
  /api/admin/certified-users:
    get:
      summary: 인증된 유저 목록 조회
      description: 인증된 유저 목록을 반환합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: string
                example:
                  success: true
                  data: ["verified@example.com"]
  /api/admin/clear-verified-emails:
    delete:
      summary: 인증된 이메일 삭제
      description: 모든 인증된 이메일을 삭제합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "✅ 모든 인증된 이메일이 삭제되었습니다."
  /api/recruitment:
    get:
      summary: 전체 모집공고 조회
      description: 모든 모집공고를 반환합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    recruitment_id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                example:
                  - recruitment_id: 1
                    title: "개발자 모집"
                    description: "프로젝트 협력자 구함"
  /api/recruitment/{recruitment_id}:
    get:
      summary: 특정 모집공고 조회
      description: 특정 모집공고를 반환합니다.
      parameters:
        - name: recruitment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  recruitment_id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
        '404':
          description: 모집공고 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "모집공고를 찾을 수 없습니다."
  /api/recruitment:
    post:
      summary: 모집공고 작성
      description: 새로운 모집공고를 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "개발자 모집"
                description:
                  type: string
                  example: "프로젝트 협력자 구함"
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  recruitment_id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
        '400':
          description: 필수 필드 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "제목과 설명이 필요합니다."
  /api/recruitment/{recruitment_id}:
    put:
      summary: 모집공고 수정
      description: 특정 모집공고를 수정합니다.
      parameters:
        - name: recruitment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  recruitment:
                    type: object
                    properties:
                      recruitment_id:
                        type: integer
                      title:
                        type: string
                      description:
                        type: string
        '404':
          description: 모집공고 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "모집공고를 찾을 수 없습니다."
  /api/recruitment/{recruitment_id}:
    delete:
      summary: 모집공고 삭제
      description: 특정 모집공고를 삭제합니다.
      parameters:
        - name: recruitment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "모집공고가 삭제되었습니다."
        '404':
          description: 모집공고 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "모집공고를 찾을 수 없습니다."
  /api/projects:
    get:
      summary: 전체 프로젝트 조회
      description: 모든 프로젝트를 반환합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    project_id:
                      type: integer
                    project_name:
                      type: string
                    description:
                      type: string
  /api/projects/{project_id}:
    get:
      summary: 특정 프로젝트 조회
      description: 특정 프로젝트를 반환합니다.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_id:
                    type: integer
                  project_name:
                    type: string
                  description:
                    type: string
        '404':
          description: 프로젝트 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "프로젝트를 찾을 수 없습니다."
  /api/projects/completed:
    get:
      summary: 완료된 프로젝트 조회
      description: 완료된 프로젝트 목록을 반환합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    project_id:
                      type: integer
                    project_name:
                      type: string
                    status:
                      type: string
  /api/projects/{project_id}:
    put:
      summary: 프로젝트 수정
      description: 특정 프로젝트를 수정합니다.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                description:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_id:
                    type: integer
                  project_name:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
        '404':
          description: 프로젝트 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "프로젝트를 찾을 수 없습니다."
  /api/projects/{project_id}:
    delete:
      summary: 프로젝트 삭제
      description: 특정 프로젝트를 삭제합니다.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "프로젝트가 삭제되었습니다."
        '404':
          description: 프로젝트 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "프로젝트를 찾을 수 없습니다."
  /api/projects/{project_id}/members:
    get:
      summary: 팀원 목록 조회
      description: 특정 프로젝트의 팀원 목록을 반환합니다.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    username:
                      type: string
                    role:
                      type: string
  /api/projects/{project_id}/members:
    post:
      summary: 팀원 추가
      description: 특정 프로젝트에 팀원을 추가합니다.
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                role:
                  type: string
                  example: "팀원"
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  role:
                    type: string
  /api/profiles/{user_id}:
    get:
      summary: 프로필 조회
      description: 특정 사용자의 프로필을 반환합니다.
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      nickname:
                        type: string
                      university:
                        type: string
        '404':
          description: 프로필 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "프로필을 찾을 수 없습니다."
  /api/profiles:
    post:
      summary: 프로필 생성
      description: 새로운 프로필을 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                nickname:
                  type: string
                  example: "홍길동"
                university:
                  type: string
                  example: "고려대학교"
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      nickname:
                        type: string
                      university:
                        type: string
  /api/profiles/{profile_id}:
    put:
      summary: 프로필 수정
      description: 특정 프로필을 수정합니다.
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                university:
                  type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      nickname:
                        type: string
                      university:
                        type: string
        '404':
          description: 프로필 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "프로필을 찾을 수 없습니다."
  /api/profiles/{profile_id}:
    delete:
      summary: 프로필 삭제
      description: 특정 프로필을 삭제합니다.
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "프로필이 삭제되었습니다."
        '404':
          description: 프로필 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "프로필을 찾을 수 없습니다."
  /api/profiles/resume/{user_id}:
    get:
      summary: 이력서 조회
      description: 특정 사용자의 이력서를 반환합니다.
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      profile:
                        type: object
                        properties:
                          user_id:
                            type: integer
                          nickname:
                            type: string
                          university:
                            type: string
                      projects:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            description:
                              type: string
        '404':
          description: 프로필 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "프로필을 찾을 수 없습니다."
  /api/recruitments/{recruitment_id}/comment:
    get:
      summary: 댓글 조회
      description: 특정 모집공고의 댓글을 반환합니다.
      parameters:
        - name: recruitment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    comment_id:
                      type: integer
                    content:
                      type: string
                    recruitment_id:
                      type: integer
  /api/recruitments/{recruitment_id}/comment:
    post:
      summary: 댓글 작성
      description: 특정 모집공고에 댓글을 작성합니다.
      parameters:
        - name: recruitment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: "좋은 모집공고네요!"
      responses:
        '201':
          description: 댓글 작성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment_id:
                    type: integer
                  content:
                    type: string
                  recruitment_id:
                    type: integer
        '400':
          description: 필수 필드 누락 또는 부적절한 언어
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "댓글 내용을 입력해주세요."
                  error:
                    type: string
                    example: "댓글에 부적절한 언어가 포함되었습니다."
  /api/scraps/recruitments:
    get:
      summary: 스크랩한 모집공고 목록 조회
      description: 사용자가 스크랩한 모집공고 목록을 반환합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    recruitment_id:
                      type: integer
                    scrap_cnt:
                      type: integer
  /api/recruitment/{recruitment_id}/scrap:
    put:
      summary: 모집공고 스크랩 토글
      description: 모집공고를 스크랩하거나 스크랩을 취소합니다.
      parameters:
        - name: recruitment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "스크랩 추가"
  /api/search:
    get:
      summary: 키워드 검색
      description: 키워드를 기반으로 검색 결과를 반환합니다.
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    keyword:
                      type: string
                    result:
                      type: string
        '400':
          description: 검색어 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "검색어를 입력해주세요."
  /api/univcert/send-otp:
    post:
      summary: OTP 발송
      description: 지정된 이메일로 OTP를 발송합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "johndoe@korea.ac.kr"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OTP 전송 완료"
        '400':
          description: 유효하지 않은 이메일
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "지원되지 않는 학교 이메일입니다."
  /api/univcert/verify-otp:
    post:
      summary: OTP 검증
      description: OTP 코드를 검증합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "johndoe@korea.ac.kr"
                code:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  certified_email:
                    type: string
                  certified_date:
                    type: string
                    format: date-time
                example:
                  message: "인증 성공"
                  certified_email: "johndoe@korea.ac.kr"
                  certified_date: "2025-02-27T11:00:00.000Z"
        '400':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "인증 실패"
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
        uuid:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [MEMBER, ADMIN]
        createdAt:
          type: string
          format: date-time